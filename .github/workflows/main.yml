name: CI Challenge
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  IMAGE_PREFIX: "ghcr.io/${{ github.repository }}"
  REGISTRY: 'ghcr.io'

jobs:
  microservice-actions:
    strategy:
      fail-fast: false
      matrix:
        service: [microservice_a, microservice_b, microservice_c]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build
        uses: docker/build-push-action@v4
        with:
          load: true
          context: "${{ matrix.service }}"
          file: "${{ matrix.service }}/Dockerfile"
          tags: ${{ env.IMAGE_PREFIX }}:${{ matrix.service }}-latest,${{ env.IMAGE_PREFIX }}:${{ matrix.service }}-${{ github.run_number }}

      - name: Run and test container
        id: test
        run: |
          docker run -d -p 5000:5000 ${{ env.IMAGE_PREFIX }}:${{ matrix.service }}-latest
          sleep 1
          status=$(python test.py http://localhost:5000)
          if [[ $status != '200' ]]
          then
          echo "::error file=test.py,title=Test is failed::Test is failed. Status code: $status";
          exit 1;
          fi
          echo "::notice file=test.py,title=Test is passed::Test is passed. Status code: $status";

      - name: "Login"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push
        if: steps.test.outputs.status == '200'
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "${{ matrix.service }}"
          file: "${{ matrix.service }}/Dockerfile"
          tags: ${{ env.IMAGE_PREFIX }}:${{ matrix.service }}-latest,${{ env.IMAGE_PREFIX }}:${{ matrix.service }}-${{ github.run_number }}
